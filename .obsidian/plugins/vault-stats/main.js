/*
THIS IS A GENERATED/BUNDLED FILE BY ESBUILD
if you want to view the source, please visit the github repository of this plugin
*/

var f=Object.defineProperty;var u=Object.getOwnPropertyDescriptor;var T=Object.getOwnPropertyNames;var $=Object.prototype.hasOwnProperty;var k=(n,t)=>{for(var s in t)f(n,s,{get:t[s],enumerable:!0})},L=(n,t,s,o)=>{if(t&&typeof t=="object"||typeof t=="function")for(let a of T(t))!$.call(n,a)&&a!==s&&f(n,a,{get:()=>t[a],enumerable:!(o=u(t,a))||o.enumerable});return n};var y=n=>L(f({},"__esModule",{value:!0}),n);var N={};k(N,{default:()=>c});module.exports=y(N);var m=require("obsidian"),c=class extends m.Plugin{async onload(){window.showStats=async()=>{let t=this.app.vault.getMarkdownFiles(),s=this.app.metadataCache,o=t.length,a=0;for(let l of t){let e=await this.app.vault.read(l);a+=e.split(/\s+/).filter(Boolean).length}let r=0;for(let l of t){let e=s.getFileCache(l);e!=null&&e.links&&(r+=e.links.length)}let i=o>0?(r/o).toFixed(1):"0",g=new Set,d=0;for(let l of t){let e=s.getFileCache(l);if(e!=null&&e.tags)for(let h of e.tags)g.add(h.tag),d++}let p=g.size,w=o>0?(d/o).toFixed(1):"0";return`
\u{1F4C4} **Total Notes:** ${o}  
\u270D\uFE0F **Total Words:** ${a.toLocaleString()}  
\u{1F517} **Total Links (outgoing):** ${r}  
\u{1F9E0} **Average Links per Note:** ${i}  
\u{1F3F7}\uFE0F **Unique Tags:** ${p}  
\u{1F4CC} **Total Tag Usages:** ${d}  
\u{1F9E9} **Tags per Note:** ${w}
      `.trim()},window.showLastModifiedNotes=async(t=10,s="Templates")=>this.app.vault.getMarkdownFiles().filter(i=>!i.path.startsWith(s+"/")).sort((i,g)=>g.stat.mtime-i.stat.mtime).slice(0,t).map(i=>`- [[${i.basename}]] (Last modified: ${new Date(i.stat.mtime).toLocaleDateString()})`).join(`
`)}onunload(){delete window.showStats,delete window.showRecentNotes}};

/* nosourcemap */